


let currentSongIndex = 0;
const audio = document.getElementById("audio");
const playBtn = document.getElementById("playBtn");
const playIcon = document.getElementById("playIcon");
const nextBtn = document.getElementById("nextBtn");
const prevBtn = document.getElementById("prevBtn");
const volumeSlider = document.getElementById("volumeSlider");
const songItems = document.querySelectorAll(".songItem");
const seekbar = document.querySelector(".seekbar");
const circle = document.querySelector(".circle");

const songs = Array.from(songItems).map((item) => item.getAttribute("data-src"));

// üîÅ Update audio source
function playSong(index) {
    currentSongIndex = index;
    audio.src = songs[index];
    audio.play();
    updatePlayIcon(true);
}

// ‚ñ∂Ô∏è Pause/Play Icon Toggle
function updatePlayIcon(isPlaying) {
    if (isPlaying) {
        playIcon.innerHTML = `<path d="M6 4h4v16H6zm8 0h4v16h-4z"/>`; // Pause icon
    } else {
        playIcon.innerHTML = `<path d="M8 5v14l11-7z"/>`; // Play icon
    }
}

// ‚ñ∂Ô∏è Toggle Play/Pause
playBtn.addEventListener("click", () => {
    if (audio.paused) {
        audio.play();
        updatePlayIcon(true);
    } else {
        audio.pause();
        updatePlayIcon(false);
    }
});

// ‚è≠Ô∏è Next Song
nextBtn.addEventListener("click", () => {
    currentSongIndex = (currentSongIndex + 1) % songs.length;
    playSong(currentSongIndex);
});

// ‚èÆÔ∏è Previous Song
prevBtn.addEventListener("click", () => {
    currentSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
    playSong(currentSongIndex);
});

// üîä Volume Control
volumeSlider.addEventListener("input", () => {
    audio.volume = volumeSlider.value;
});

// üéµ Click on Song from List
songItems.forEach((item, index) => {
    item.addEventListener("click", () => {
        playSong(index);
    });
});

// üéöÔ∏è Update Circle on Seekbar with Time
audio.addEventListener("timeupdate", () => {
    if (!isNaN(audio.duration)) {
        const progress = (audio.currentTime / audio.duration) * 100;
        circle.style.left = `${progress}%`;
    }
});

seekbar.addEventListener("click", (e) => {
    const rect = seekbar.getBoundingClientRect();
    const offsetX = e.clientX - rect.left;
    const percent = offsetX / seekbar.clientWidth;
    audio.currentTime = percent * audio.duration;
});
